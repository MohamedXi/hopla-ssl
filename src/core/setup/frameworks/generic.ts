/**
 * Generic configuration module for frameworks not directly supported
 */
import chalk from 'chalk';
import fs from 'fs-extra';
import path from 'path';
import { PackageJson } from '../../../types/framework.types.js';

/**
 * Configure a generic project to use HTTPS
 * @param projectPath - Path to the project
 */
export async function setupGeneric(projectPath: string): Promise<void> {
  console.log(chalk.blue('Generic configuration...'));

  // Create a server.js file at the project root
  const serverJsPath = path.join(projectPath, 'https-server.js');
  const serverJsContent = `
/**
 * Generic HTTPS server for local development
 * Generated by hopla-ssl
 */
const fs = require('fs');
const path = require('path');
const https = require('https');
const express = require('express');
const app = express();

// Path to the folder containing static files
// Modify this value according to your project
const staticDir = path.join(__dirname, 'dist');

// HTTPS Configuration
const httpsOptions = {
  key: fs.readFileSync(path.join(__dirname, 'ssl/key.pem')),
  cert: fs.readFileSync(path.join(__dirname, 'ssl/cert.pem'))
};

// Serve static files
app.use(express.static(staticDir));

// Redirect all routes to index.html for SPAs
app.get('*', (req, res) => {
  res.sendFile(path.join(staticDir, 'index.html'));
});

// Start the HTTPS server
const PORT = process.env.PORT || 3000;
https.createServer(httpsOptions, app).listen(PORT, () => {
  console.log(\`HTTPS server started on https://localhost:\${PORT}\`);
});
`;

  await fs.writeFile(serverJsPath, serverJsContent);

  // Check if express is installed, otherwise add a note
  const packageJsonPath = path.join(projectPath, 'package.json');
  if (await fs.pathExists(packageJsonPath)) {
    const packageJson: PackageJson = await fs.readJson(packageJsonPath);
    const hasExpress = packageJson.dependencies?.express || packageJson.devDependencies?.express;

    if (!hasExpress) {
      console.log(
        chalk.yellow(
          'Note: This generic server requires Express. Install it with: npm install express --save'
        )
      );
    }

    // Add a script to start the HTTPS server
    if (!packageJson.scripts) {
      packageJson.scripts = {};
    }

    packageJson.scripts['start:https'] = 'node https-server.js';

    await fs.writeJson(packageJsonPath, packageJson, { spaces: 2 });
  }

  // Create a README-HTTPS.md with instructions
  const readmePath = path.join(projectPath, 'README-HTTPS.md');
  const readmeContent = `
# Configuration HTTPS for local development

This project has been configured for local HTTPS development with [hopla-ssl](https://github.com/MohamedXi/hopla-ssl).

## Certificates

The SSL auto-signed certificates have been generated in the \`ssl/\` folder:
- \`key.pem\`: Private key
- \`cert.pem\`: Certificate
- \`ca.pem\`: Certificate of the certificate authority

## Usage

To start the development server with HTTPS:

\`\`\`bash
npm run start:https
\`\`\`

## Custom configuration

The \`https-server.js\` file contains a generic HTTPS server configuration.
You may need to adapt it to your project:

1. Modify the \`staticDir\` variable to point to the directory containing your static files
2. Adjust the server configuration according to your needs

## Required dependencies

This server requires Express. If you haven't installed it yet:

\`\`\`bash
npm install express --save
\`\`\`
`;

  await fs.writeFile(readmePath, readmeContent);

  console.log(
    chalk.green('Generic configuration completed! Use "npm run start:https" to start with HTTPS.')
  );
  console.log(
    chalk.yellow('Consult the README-HTTPS.md file for more information on the configuration.')
  );
}
